openapi: 3.0.3
info:
  title: NeuroClinAIcal Backend API
  version: 1.0.0
  description: API for managing user accounts, patients, and medical reports for NeuroClinAIcal.

# servers:
#   - url: TODO

security:
  - BearerAuth: []

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

tags:
  - name: User
    description: User account registration, authentication, and management
  - name: Patients
    description: Operations related to patient data
  - name: Reports
    description: Operations related to uploading and managing LTM reports
  - name: Seizures
  - name: Supplemental Materials
    description: Uploading, listing, downloading, and deleting supplemental files linked to patients
  - name: Chat
    description: Operations related to LLM chat features

paths:
  /user/login:
    post:
      summary: Log in a user
      description: Authenticates a user and returns a JWT token for accessing protected endpoints.
      operationId: login_user
      tags:
        - User
      security: [] # Public
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: The email address of the user.
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  description: The password of the user.
                  example: "password123"
      responses:
        "200":
          description: Successful login. Returns a JWT token.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token for authentication.
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "401":
          description: Invalid credentials.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid email or password."

  /user/register:
    post:
      summary: Register a new user
      description: Creates a new user account in the system.
      operationId: register_user
      tags:
        - User
      security: [] # Public
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - name
                - email
                - password
              properties:
                username:
                  type: string
                  example: "johndoe123"
                name:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "johndoe@example.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        "201":
          description: User created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 123
                  username:
                    type: string
                    example: "johndoe123"
                  name:
                    type: string
                    example: "John Doe"
                  email:
                    type: string
                    example: "johndoe@example.com"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "400":
          description: Bad request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Email is already in use."

  /user/logout:
    post:
      summary: Log out a user
      description: Invalidates the user's JWT token and ends their session.
      operationId: logout_user
      tags:
        - User
      security:
        - BearerAuth: []
      responses:
        "200":
          description: Successful logout.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User logged out successfully."
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Missing or invalid token."

  /user:
    put:
      summary: Update user account
      description: Updates the details of the currently authenticated user's account.
      operationId: update_user_account
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - name
                - email
                - password
              properties:
                username:
                  type: string
                  example: "newusername123"
                name:
                  type: string
                  example: "New Name"
                email:
                  type: string
                  format: email
                  example: "newemail@example.com"
                password:
                  type: string
                  format: password
                  example: "newpassword123"
      responses:
        "200":
          description: Account updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: The JWT token for authentication.
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Missing or invalid token."

    delete:
      summary: Delete user account
      description: Deletes the currently authenticated user's account.
      operationId: delete_user_account
      tags:
        - User
      responses:
        "204":
          description: Account deleted successfully.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Missing or invalid token."

  /patients:
    get:
      summary: Get all patients
      description: Retrieves a list of all patients in the system.
      operationId: get_all_patients
      tags:
        - Patients
      responses:
        "200":
          description: List of patients.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "John Doe"
                    dob:
                      type: string
                      format: date
                      nullable: true
                      example: "1990-01-01"
        "500":
          description: Internal server error.

    post:
      summary: Create a new patient
      description: Creates a new patient in the system.
      operationId: create_patient
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: "Jane Doe"
                dob:
                  type: string
                  format: date
                  nullable: true
                  example: "1990-05-15"
      responses:
        "201":
          description: Patient created successfully.
        "400":
          description: Invalid input.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid input: 'name' is required."

  /patients/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          example: 101
        description: The patient ID

    get:
      summary: Get a specific patient
      description: Retrieves detailed information about a specific patient by ID.
      operationId: get_patient_by_id
      tags:
        - Patients
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 101
          description: The ID of the patient to retrieve.
      responses:
        "200":
          description: Patient details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 101
                  name:
                    type: string
                    example: "Jane Doe"
                  dob:
                    type: string
                    format: date
                    nullable: true
                    example: "1990-05-15"
        "404":
          description: Patient not found.
        "500":
          description: Server error.

    patch:
      summary: Update a patient
      description: Updates details of an existing patient.
      operationId: update_patient
      tags:
        - Patients
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Jane Doe"
                dob:
                  type: string
                  format: date
                  nullable: true
                  example: "1990-05-15"
      responses:
        "200":
          description: Patient updated successfully.
        "400":
          description: Invalid input.
        "404":
          description: Patient not found.

    delete:
      summary: Delete a patient
      description: Deletes a patient from the system.
      operationId: delete_patient
      tags:
        - Patients
      responses:
        "204":
          description: Patient deleted successfully.
        "404":
          description: Patient not found.
        "500":
          description: Server error.

  /reports:
    post:
      summary: Upload a report file
      description: Uploads a report file for a specific patient.
      operationId: upload_report
      tags:
        - Reports
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                patient_id:
                  type: integer
                  example: 101
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: Report uploaded successfully.
        "400":
          description: Invalid input.
        "404":
          description: Patient not found.
        "500":
          description: File processing error.

  /patients/{id}/reports:
    get:
      summary: Get all reports metadata for a patient
      description: Retrieves a list of metadata for all reports associated with a specific patient.
      operationId: get_patient_reports
      tags:
        - Patients
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the patient whose reports are being retrieved.
      responses:
        "200":
          description: List of reports retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    report_id:
                      type: integer
                      example: 456
                    uploaded_at:
                      type: string
                      format: date-time
                      example: "2024-01-15T13:45:30Z"
        "404":
          description: Patient not found.
        "500":
          description: Server error.

  /reports/{report_id}:
    get:
      summary: Get metadata for a report
      description: Retrieves metadata for a specific report.
      operationId: get_report_metadata
      tags:
        - Reports
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the report to retrieve.
      responses:
        "200":
          description: Report metadata retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  report_id:
                    type: integer
                    example: 456
                  patient_id:
                    type: integer
                    example: 101
                  uploaded_at:
                    type: string
                    format: date-time
                    example: "2024-01-15T13:45:30Z"
                  summary:
                    type: string
        "404":
          description: Report not found.
        "500":
          description: Server error.
    delete:
      summary: Delete a report
      description: Deletes a specific report by its ID.
      operationId: delete_report
      tags:
        - Reports
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the report to delete.
      responses:
        "204":
          description: Report deleted successfully.
        "404":
          description: Report not found.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Missing or invalid token."

  /reports/{report_id}/download:
    get:
      summary: Download a report file
      description: Returns the binary contents of a report file for download, supporting multiple file types.
      operationId: download_report
      tags:
        - Reports
      parameters:
        - name: report_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the report to download.
      responses:
        "200":
          description: File retrieved successfully.
          content:
            application/pdf:
              schema:
                type: string
                format: binary
            application/vnd.openxmlformats-officedocument.wordprocessingml.document:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
                format: binary
            application/vnd.oasis.opendocument.text:
              schema:
                type: string
                format: binary
        "404":
          description: Report not found.
        "500":
          description: Server error.
  /patients/{id}/seizures:
    get:
      summary: Get all seizures for a patient
      description: Retrieves a list of all seizures associated with a specific patient.
      operationId: get_seizures_by_patient
      tags:
        - Patients
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the patient whose seizures are being retrieved.
      responses:
        "200":
          description: List of seizures retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    day:
                      type: integer
                      example: 3
                    start_time:
                      type: string
                      format: time
                      example: "14:30:00"
                    duration:
                      type: string
                      description: ISO 8601 duration format
                      example: "PT2M30S"
                    created_at:
                      type: string
                      format: date-time
                    modified_at:
                      type: string
                      format: date-time
        "404":
          description: Patient not found.

  /seizures/{id}:
    get:
      summary: Get details of a seizure
      description: Retrieves detailed information about a specific seizure by ID.
      operationId: get_seizure_by_id
      tags:
        - Seizures
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the seizure to retrieve.
      responses:
        "200":
          description: Seizure details retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 42
                  patient_id:
                    type: integer
                    example: 101
                  day:
                    type: integer
                    example: 3
                  start_time:
                    type: string
                    format: time
                    example: "15:07:23"
                    description: Start time in HH:MM:SS format.
                  duration:
                    type: integer
                    example: 90
                    description: Duration in seconds.
                  created_at:
                    type: string
                    format: date-time
                  modified_at:
                    type: string
                    format: date-time
        "404":
          description: Seizure not found.

  /supplemental_materials:
    post:
      summary: Upload a supplemental material file
      description: Uploads a supplemental file associated with a patient.
      operationId: upload_supplemental_material
      tags:
        - Supplemental Materials
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - patient_id
                - file
              properties:
                patient_id:
                  type: integer
                  example: 101
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: Supplemental material uploaded successfully.
        "400":
          description: Invalid input.
        "404":
          description: Patient not found.
        "500":
          description: File processing error.

  /supplemental_materials/{id}/download:
    get:
      summary: Download a supplemental material file
      description: Returns the file contents of a specific supplemental material.
      operationId: download_supplemental_material
      tags:
        - Supplemental Materials
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the supplemental material to download.
      responses:
        "200":
          description: File retrieved successfully.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        "404":
          description: Supplemental material not found.
        "500":
          description: File read error.

  /supplemental_materials/{id}:
    delete:
      summary: Delete a supplemental material file
      description: Deletes a specific supplemental material by its ID.
      operationId: delete_supplemental_material
      tags:
        - Supplemental Materials
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the supplemental material to delete.
      responses:
        "204":
          description: Supplemental material deleted successfully.
        "404":
          description: Supplemental material not found.
        "401":
          description: Unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Unauthorized: Missing or invalid token."

  /patients/{id}/supplemental_materials:
    get:
      summary: Get all supplemental materials for a patient
      description: Retrieves metadata of all supplemental materials associated with a specific patient.
      operationId: get_patient_supplemental_materials
      tags:
        - Patients
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The patient ID.
      responses:
        "200":
          description: List of supplemental materials.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 25
                    filepath:
                      type: string
                      example: "materials/scan_summary_25.pdf"
                    created_at:
                      type: string
                      format: date-time
                      example: "2024-11-03T14:22:00Z"
        "404":
          description: Patient not found.
        "500":
          description: Server error.

  /patients/{id}/drug_administration:
    get:
      summary: Get full drug administration history for a patient
      description: Retrieves a list of all drug administrations recorded for a specific patient.
      operationId: get_patient_drug_administration
      tags:
        - Patients
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the patient whose drug administration history is being retrieved.
      responses:
        "200":
          description: List of drug administrations retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 10
                    drug_id:
                      type: integer
                      example: 3
                    drug_name:
                      type: string
                      example: "Carbamazepine"
                    drug_class:
                      type: string
                      example: "Anticonvulsant"
                    day:
                      type: integer
                      example: 2
                    dosage:
                      type: integer
                      example: 200
                      description: Dosage in milligrams
        "404":
          description: Patient not found.
        "500":
          description: Server error.

  /chat/{patient_id}/messages:
    post:
      summary: Send a message to the AI (conversation auto-created if needed)
      description: Sends a message from the authenticated user regarding a patient. If a conversation doesn’t already exist for the user–patient pair, one is created automatically.
      operationId: send_message
      tags:
        - Chat
      security:
        - BearerAuth: []
      parameters:
        - name: patient_id
          in: path
          required: true
          schema:
            type: integer
          description: The patient ID the conversation is about.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - query
              properties:
                query:
                  type: string
                  example: "What is the medication history for this patient?"
      responses:
        "200":
          description: Message sent and response returned.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message_id:
                    type: integer
                    example: 87
                  response:
                    type: string
                    example: "The patient is prescribed 200mg Carbamazepine daily for 5 days."
                  created_at:
                    type: string
                    format: date-time
        "400":
          description: Invalid input.
        "401":
          description: Unauthorized.
        "500":
          description: Server error.

    get:
      summary: Get full conversation history with a patient
      description: Retrieves all messages in the conversation between the authenticated user and a given patient.
      operationId: get_conversation_messages
      tags:
        - Chat
      security:
        - BearerAuth: []
      parameters:
        - name: patient_id
          in: path
          required: true
          schema:
            type: integer
          description: The patient ID the conversation is about.
      responses:
        "200":
          description: Conversation history retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 33
                        query:
                          type: string
                          example: "What is the medication plan for this patient?"
                        response:
                          type: string
                          example: "The patient is prescribed Carbamazepine 200mg for 5 days."
                        created_at:
                          type: string
                          format: date-time
                          example: "2025-03-17T08:32:00Z"
        "404":
          description: Conversation not found for this user and patient.
        "401":
          description: Unauthorized.
        "500":
          description: Server error.
